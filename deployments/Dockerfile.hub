FROM golang:1.24-alpine AS whisper-builder

# Install build dependencies
RUN apk add --no-cache \
    git \
    build-base \
    cmake \
    pkgconfig

# Build whisper.cpp from source
WORKDIR /tmp
RUN git clone https://github.com/ggerganov/whisper.cpp.git
WORKDIR /tmp/whisper.cpp
RUN make

# Download base English model
RUN mkdir -p models && \
    wget -O models/ggml-base.en.bin https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-base.en.bin

# Go builder stage
FROM golang:1.24-alpine AS go-builder

# Install basic tools
RUN apk add --no-cache git build-base

# Set CGO flags for whisper.cpp
ENV CGO_CFLAGS="-I/tmp/whisper.cpp/include -I/tmp/whisper.cpp/ggml/include"
ENV CGO_LDFLAGS="-L/tmp/whisper.cpp/build/src -lwhisper -L/tmp/whisper.cpp/build/ggml/src -lggml -lm"

# Copy whisper.cpp from builder
COPY --from=whisper-builder /tmp/whisper.cpp /tmp/whisper.cpp

# Set working directory
WORKDIR /app

# Copy proto module first
COPY proto ./proto
WORKDIR /app/proto/go
RUN go mod download

# Copy hub module
WORKDIR /app
COPY hub/loqa-hub ./hub/loqa-hub
WORKDIR /app/hub/loqa-hub
RUN go mod download

# Build the main hub service
RUN go build -o loqa-hub ./cmd

# Runtime stage
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache ca-certificates libgomp

# Create app directory
WORKDIR /app

# Copy binaries
COPY --from=go-builder /app/hub/loqa-hub/loqa-hub .

# Copy whisper.cpp and models
COPY --from=whisper-builder /tmp/whisper.cpp /tmp/whisper.cpp
COPY --from=whisper-builder /tmp/whisper.cpp/models/ggml-base.en.bin /models/

# Set default environment variables
ENV WHISPER_MODEL_PATH=/models/ggml-base.en.bin
ENV WHISPER_LANGUAGE=en
ENV OLLAMA_URL=http://ollama:11434
ENV OLLAMA_MODEL=llama3.2:3b
ENV NATS_URL=nats://nats:4222
ENV NATS_SUBJECT=loqa.commands
ENV LOQA_HOST=0.0.0.0
ENV LOQA_PORT=3000
ENV LOQA_GRPC_PORT=50051
ENV LOG_LEVEL=info
ENV LOG_FORMAT=json

# Expose ports
EXPOSE 3000 50051

# Run the hub service
CMD ["./loqa-hub"]